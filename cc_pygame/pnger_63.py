import sys
import math
import pygame
from shapes.pygame_rectangle import draw_quick_square

def main() -> int:
    pygame.init()
    res = (1600, 1600)
    screen = pygame.display.set_mode(res)
    screen_color = "black"
    screen.fill(screen_color)
    edge_width = 2
    # draw_quick_square(screen, "crimson", pygame.Vector2(0, 0), int(screen.get_width()), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(0, 0), int(screen.get_width() / 2), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(0, 0), int(screen.get_width() / 4), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(0, 0), int(screen.get_width() / 8), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(0, 0), int(screen.get_width() / 16), 0, edge_width)
    # draw_quick_square(screen, "crimson", pygame.Vector2(screen.get_width(), screen.get_height()), int(screen.get_width()), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(screen.get_width(), screen.get_height()), int(screen.get_width() / 2), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(screen.get_width(), screen.get_height()), int(screen.get_width() / 4), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(screen.get_width(), screen.get_height()), int(screen.get_width() / 8), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(screen.get_width(), screen.get_height()), int(screen.get_width() / 16), 0, edge_width)
    # draw_quick_square(screen, "crimson", pygame.Vector2(0, screen.get_height()), int(screen.get_width()), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(0, screen.get_height()), int(screen.get_width() / 2), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(0, screen.get_height()), int(screen.get_width() / 4), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(0, screen.get_height()), int(screen.get_width() / 8), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(0, screen.get_height()), int(screen.get_width() / 16), 0, edge_width)
    # draw_quick_square(screen, "crimson", pygame.Vector2(screen.get_width(), 0), int(screen.get_width()), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(screen.get_width(), 0), int(screen.get_width() / 2), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(screen.get_width(), 0), int(screen.get_width() / 4), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(screen.get_width(), 0), int(screen.get_width() / 8), 0, edge_width)
    draw_quick_square(screen, "crimson", pygame.Vector2(screen.get_width(), 0), int(screen.get_width() / 16), 0, edge_width)
    # draw_quick_square(screen, "teal", pygame.Vector2(0, screen.get_height() / 2), int(screen.get_width()), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(0, screen.get_height() / 2), int(screen.get_width() / 2), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(0, screen.get_height() / 2), int(screen.get_width() / 4), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(0, screen.get_height() / 2), int(screen.get_width() / 8), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(0, screen.get_height() / 2), int(screen.get_width() / 16), 0, edge_width)
    # draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width() / 2, 0), int(screen.get_width()), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width() / 2, 0), int(screen.get_width() / 2), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width() / 2, 0), int(screen.get_width() / 4), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width() / 2, 0), int(screen.get_width() / 8), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width() / 2, 0), int(screen.get_width() / 16), 0, edge_width)
    # draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width() / 2, screen.get_height()), int(screen.get_width()), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width() / 2, screen.get_height()), int(screen.get_width() / 2), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width() / 2, screen.get_height()), int(screen.get_width() / 4), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width() / 2, screen.get_height()), int(screen.get_width() / 8), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width() / 2, screen.get_height()), int(screen.get_width() / 16), 0, edge_width)
    # draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width(), screen.get_height() / 2), int(screen.get_width()), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width(), screen.get_height() / 2), int(screen.get_width() / 2), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width(), screen.get_height() / 2), int(screen.get_width() / 4), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width(), screen.get_height() / 2), int(screen.get_width() / 8), 0, edge_width)
    draw_quick_square(screen, "teal", pygame.Vector2(screen.get_width(), screen.get_height() / 2), int(screen.get_width() / 16), 0, edge_width)
    # draw_quick_square(screen, "grey", pygame.Vector2(screen.get_width() / 4, screen.get_height() / 4), int(screen.get_width()), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(screen.get_width() / 4, screen.get_height() / 4), int(screen.get_width() / 2), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(screen.get_width() / 4, screen.get_height() / 4), int(screen.get_width() / 4), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(screen.get_width() / 4, screen.get_height() / 4), int(screen.get_width() / 8), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(screen.get_width() / 4, screen.get_height() / 4), int(screen.get_width() / 16), 0, edge_width)
    # draw_quick_square(screen, "grey", pygame.Vector2(screen.get_width() / 4, 3* screen.get_height() / 4), int(screen.get_width()), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(screen.get_width() / 4, 3* screen.get_height() / 4), int(screen.get_width() / 2), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(screen.get_width() / 4, 3* screen.get_height() / 4), int(screen.get_width() / 4), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(screen.get_width() / 4, 3* screen.get_height() / 4), int(screen.get_width() / 8), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(screen.get_width() / 4, 3* screen.get_height() / 4), int(screen.get_width() / 16), 0, edge_width)
    # draw_quick_square(screen, "grey", pygame.Vector2(3* screen.get_width() / 4, screen.get_height() / 4), int(screen.get_width()), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(3* screen.get_width() / 4, screen.get_height() / 4), int(screen.get_width() / 2), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(3* screen.get_width() / 4, screen.get_height() / 4), int(screen.get_width() / 4), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(3* screen.get_width() / 4, screen.get_height() / 4), int(screen.get_width() / 8), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(3* screen.get_width() / 4, screen.get_height() / 4), int(screen.get_width() / 16), 0, edge_width)
    # draw_quick_square(screen, "grey", pygame.Vector2(3* screen.get_width() / 4, 3* screen.get_height() / 4), int(screen.get_width()), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(3* screen.get_width() / 4, 3* screen.get_height() / 4), int(screen.get_width() / 2), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(3* screen.get_width() / 4, 3* screen.get_height() / 4), int(screen.get_width() / 4), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(3* screen.get_width() / 4, 3* screen.get_height() / 4), int(screen.get_width() / 8), 0, edge_width)
    draw_quick_square(screen, "grey", pygame.Vector2(3* screen.get_width() / 4, 3* screen.get_height() / 4), int(screen.get_width() / 16), 0, edge_width)
    # draw_quick_square(screen, "midnightblue", pygame.Vector2(screen.get_width() / 2, screen.get_height() / 2), int(screen.get_width()), 0, edge_width)
    draw_quick_square(screen, "midnightblue", pygame.Vector2(screen.get_width() / 2, screen.get_height() / 2), int(screen.get_width() / 2), 0, edge_width)
    draw_quick_square(screen, "midnightblue", pygame.Vector2(screen.get_width() / 2, screen.get_height() / 2), int(screen.get_width() / 4), 0, edge_width)
    draw_quick_square(screen, "midnightblue", pygame.Vector2(screen.get_width() / 2, screen.get_height() / 2), int(screen.get_width() / 8), 0, edge_width)
    draw_quick_square(screen, "midnightblue", pygame.Vector2(screen.get_width() / 2, screen.get_height() / 2), int(screen.get_width() / 16), 0, edge_width)
    draw_quick_square(screen, "white", pygame.Vector2(screen.get_width() / 2, screen.get_height() / 2), int(screen.get_width()), 0, edge_width)
    pygame.image.save(screen, 'cc_pygame/gen/jpger_63.jpg')
    pygame.quit()
    return 0

if __name__ == "__main__":
    sys.exit(main())
